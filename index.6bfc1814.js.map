{"mappings":"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AAQ/1G,OAAS,GACxC,OAAO41G,EACLr3G,EACAgqF,EAASA,EAAO1pF,SAASszG,QAAQ5zG,GAAQ,KACzCgqF,E,GAX+BstB,E,ECxC5BS,GAAgB,CAC3BC,MAAO,CAAC,UACRC,cAAe,gBACfC,QAAS,CAAC,OAAQ,MAClBC,UAAW,CACTC,MAAO,CAAC,SACRC,MAAO,CAAC,SACRC,MAAO,CAAC,SACRC,GAAI,CAAC,SACLC,GAAI,CAAC,SACLC,GAAI,CAAC,UAEPC,UAAW,CACT/jB,KAAM,CAAC,OAAQ,QAAS,SAAU,OAAQ,MAAO,QACjD9B,KAAM,CAAC,OAAQ,SACfyK,IAAK,CAAC,OAAQ,SACdqC,SAAU,CAAC,OAAQ,UAErBgZ,SAAU,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,SACA,KACA,IACA,MACA,OACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,IACA,KACA,KACA,QACA,QACA,QACA,QACA,aACA,KACA,KACA,KACA,MACA,IACA,OACA,MACA,KACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,SACA,UACA,UACA,UACA,SACA,aACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,SAEFzrB,WAAY,CACV0rB,EAAG,CAAC,QACJC,IAAK,CAAC,MAAO,YACbvF,MAAO,CACL,CAAC,OAAQ,YACT,CAAC,YAAY,IAEfwF,GAAI,CAAC,CAAC,YAAa,mBACnB70E,IAAK,CAAC,YAAa,YACnB80E,WAAY,CAAC,QACbC,IAAK,CAAC,QACNC,IAAK,CAAC,QACNC,EAAG,CAAC,QACJ,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,kBACA,aACA,YACA,iBACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,SACA,WACA,MACA,WACA,UACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,KACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,MACA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ACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,GAAyB,CACpCxgE,KAAM,IACLjR,MAAM,IACNxU,KAAK,IACLi0B,MAAM,IACN/vB,OAAO,IACP6tC,IAAI,IACJh0C,OAAO,IACPugC,KAAK,IACL+M,IAAI,IACJhpC,KAAK,IACL0uB,KAAK,IACLzX,MAAM,IACN6P,IAAI,IACJgW,IAAI,IACJvF,IAAI,IACJ5X,KAAK,IACLvc,IAAI,IACJkuB,OAAO,IACP+Q,KAAK,IACLC,KAAK,IACLvwC,MAAM,IACN2uB,MAAM,IACN+O,KAAK,IACL3O,OAAO,IACPrjB,MAAM,IACN2kC,KAAK,IACLzT,KAAK,IACLsG,MAAM,IACN1pB,OAAO,IACPF,OAAO,IACPQ,OAAO,IACPuI,OAAO,IACP1nC,OAAO,IACPL,OAAO,IACPE,MAAM,IACNa,OAAO,IACPC,KAAK,IACLJ,MAAM,IACNd,MAAM,IACNsC,OAAO,IACPyF,OAAO,IACPN,OAAO,IACPE,MAAM,IACNkB,KAAK,IACLoD,OAAO,IACPL,OAAO,IACPC,MAAM,IACNoB,KAAK,IACLzF,IAAI,IACJkP,OAAO,IACPQ,OAAO,IACPL,OAAO,IACPC,MAAM,IACNc,OAAO,IACPE,KAAK,IACLshD,MAAM,IACNzhD,OAAO,IACPkJ,OAAO,IACPT,OAAO,IACPK,MAAM,IACN8B,KAAK,IACL8B,OAAO,IACPvF,MAAM,IACNg5C,MAAM,IACN7xC,OAAO,IACPX,OAAO,IACPK,MAAM,IACNmD,OAAO,IACPC,KAAK,IACLN,MAAM,IACN3C,MAAM,IACNmL,OAAO,IACP+J,OAAO,IACPZ,OAAO,IACPI,MAAM,IACNkD,KAAK,IACLyI,OAAO,IACPR,OAAO,IACPE,MAAM,IACN+C,KAAK,I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","sources":["../glsf/node_modules/unist-builder/index.js","../glsf/elements.js","../glsf/node_modules/mdast-util-to-string/index.js","../glsf/node_modules/micromark-util-chunked/index.js","../glsf/node_modules/micromark-util-combine-extensions/index.js","../glsf/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../glsf/node_modules/micromark-util-character/index.js","../glsf/node_modules/micromark-factory-space/index.js","../glsf/node_modules/micromark/lib/initialize/content.js","../glsf/node_modules/micromark/lib/initialize/document.js","../glsf/node_modules/micromark-util-classify-character/index.js","../glsf/node_modules/micromark-util-resolve-all/index.js","../glsf/node_modules/micromark-core-commonmark/lib/attention.js","../glsf/node_modules/micromark-core-commonmark/lib/autolink.js","../glsf/node_modules/micromark-core-commonmark/lib/blank-line.js","../glsf/node_modules/micromark-core-commonmark/lib/block-quote.js","../glsf/node_modules/micromark-core-commonmark/lib/character-escape.js","../glsf/node_modules/character-entities/index.js","../glsf/node_modules/decode-named-character-reference/index.js","../glsf/node_modules/micromark-core-commonmark/lib/character-reference.js","../glsf/node_modules/micromark-core-commonmark/lib/code-fenced.js","../glsf/node_modules/micromark-core-commonmark/lib/code-indented.js","../glsf/node_modules/micromark-core-commonmark/lib/code-text.js","../glsf/node_modules/micromark-util-subtokenize/index.js","../glsf/node_modules/micromark-core-commonmark/lib/content.js","../glsf/node_modules/micromark-factory-destination/index.js","../glsf/node_modules/micromark-factory-label/index.js","../glsf/node_modules/micromark-factory-title/index.js","../glsf/node_modules/micromark-factory-whitespace/index.js","../glsf/node_modules/micromark-util-normalize-identifier/index.js","../glsf/node_modules/micromark-core-commonmark/lib/definition.js","../glsf/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../glsf/node_modules/micromark-core-commonmark/lib/heading-atx.js","../glsf/node_modules/micromark-util-html-tag-name/index.js","../glsf/node_modules/micromark-core-commonmark/lib/html-flow.js","../glsf/node_modules/micromark-core-commonmark/lib/html-text.js","../glsf/node_modules/micromark-core-commonmark/lib/label-end.js","../glsf/node_modules/micromark-core-commonmark/lib/label-start-image.js","../glsf/node_modules/micromark-core-commonmark/lib/label-start-link.js","../glsf/node_modules/micromark-core-commonmark/lib/line-ending.js","../glsf/node_modules/micromark-core-commonmark/lib/thematic-break.js","../glsf/node_modules/micromark-core-commonmark/lib/list.js","../glsf/node_modules/micromark-core-commonmark/lib/setext-underline.js","../glsf/node_modules/micromark/lib/initialize/flow.js","../glsf/node_modules/micromark/lib/initialize/text.js","../glsf/node_modules/micromark/lib/create-tokenizer.js","../glsf/node_modules/micromark/lib/constructs.js","../glsf/node_modules/micromark/lib/parse.js","../glsf/node_modules/micromark/lib/preprocess.js","../glsf/node_modules/micromark/lib/postprocess.js","../glsf/node_modules/micromark-util-decode-numeric-character-reference/index.js","../glsf/node_modules/micromark-util-decode-string/index.js","../glsf/node_modules/unist-util-stringify-position/index.js","../glsf/node_modules/mdast-util-from-markdown/lib/index.js","../glsf/node_modules/property-information/lib/util/schema.js","../glsf/node_modules/property-information/lib/util/merge.js","../glsf/node_modules/property-information/lib/normalize.js","../glsf/node_modules/property-information/lib/util/info.js","../glsf/node_modules/property-information/lib/util/types.js","../glsf/node_modules/property-information/lib/util/defined-info.js","../glsf/node_modules/property-information/lib/util/create.js","../glsf/node_modules/property-information/lib/xlink.js","../glsf/node_modules/property-information/lib/xml.js","../glsf/node_modules/property-information/lib/util/case-sensitive-transform.js","../glsf/node_modules/property-information/lib/util/case-insensitive-transform.js","../glsf/node_modules/property-information/lib/xmlns.js","../glsf/node_modules/property-information/lib/aria.js","../glsf/node_modules/property-information/lib/html.js","../glsf/node_modules/property-information/lib/svg.js","../glsf/node_modules/property-information/lib/find.js","../glsf/node_modules/property-information/index.js","../glsf/node_modules/hast-util-parse-selector/index.js","../glsf/node_modules/space-separated-tokens/index.js","../glsf/node_modules/comma-separated-tokens/index.js","../glsf/node_modules/hastscript/lib/core.js","../glsf/node_modules/hastscript/lib/html.js","../glsf/node_modules/unist-util-inspect/color-browser.js","../glsf/node_modules/unist-util-inspect/index.js","../glsf/node_modules/unist-util-is/index.js","../glsf/node_modules/unist-util-visit-parents/index.js","../glsf/node_modules/unist-util-visit/index.js","../glsf/node_modules/hast-util-sanitize/lib/schema.js","../glsf/node_modules/hast-util-sanitize/lib/index.js","../glsf/node_modules/unist-util-position/index.js","../glsf/node_modules/mdast-util-definitions/index.js","../glsf/node_modules/mdast-util-to-hast/lib/traverse.js","../glsf/node_modules/micromark-util-encode/index.js","../glsf/node_modules/micromark-util-sanitize-uri/index.js","../glsf/node_modules/mdast-util-to-hast/lib/wrap.js","../glsf/node_modules/mdast-util-to-hast/lib/footer.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../glsf/node_modules/mdurl/encode.js","../glsf/node_modules/mdast-util-to-hast/lib/revert.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../glsf/node_modules/trim-lines/index.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/index.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/break.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/code.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/html.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/image.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/link.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/list.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/root.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/table.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/text.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../glsf/node_modules/mdast-util-to-hast/lib/index.js","../glsf/node_modules/unist-util-generated/index.js","../glsf/node_modules/html-void-elements/index.js","../glsf/node_modules/hast-util-is-element/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/util/comment.js","../glsf/node_modules/hast-util-whitespace/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/util/siblings.js","../glsf/node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js","../glsf/node_modules/hast-util-to-html/lib/omission/omission.js","../glsf/node_modules/hast-util-to-html/lib/omission/closing.js","../glsf/node_modules/hast-util-to-html/lib/omission/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/opening.js","../glsf/node_modules/stringify-entities/lib/core.js","../glsf/node_modules/stringify-entities/lib/util/to-hexadecimal.js","../glsf/node_modules/stringify-entities/lib/util/to-decimal.js","../glsf/node_modules/character-entities-legacy/index.js","../glsf/node_modules/character-entities-html4/index.js","../glsf/node_modules/stringify-entities/lib/constant/dangerous.js","../glsf/node_modules/stringify-entities/lib/util/to-named.js","../glsf/node_modules/stringify-entities/lib/util/format-smart.js","../glsf/node_modules/stringify-entities/lib/index.js","../glsf/node_modules/ccount/index.js","../glsf/node_modules/hast-util-to-html/lib/constants.js","../glsf/node_modules/hast-util-to-html/lib/text.js","../glsf/node_modules/hast-util-to-html/lib/tree.js","../glsf/node_modules/hast-util-to-html/lib/comment.js","../glsf/node_modules/hast-util-to-html/lib/doctype.js","../glsf/node_modules/hast-util-to-html/lib/raw.js","../glsf/node_modules/hast-util-to-html/lib/index.js","../glsf/node_modules/deepmerge/dist/cjs.js","../glsf/render.js","../glsf/node_modules/unist-util-remove-position/index.js","../glsf/node_modules/unist-util-map/index.js","src/main.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","import { u } from 'unist-builder';\n\nexport const doc = (content, attrs) => u('root', attrs, content);\nexport const paragraph = (text) => u('paragraph', [u('text', text)]);\nexport const heading = (text, attrs) => u('heading', attrs, [u('text', text)]);\nexport const mediaContainer = (content, attrs) => u('media-container', attrs, content);\nexport const token = (tezosStoragePointer) => u('token', tezosStoragePointer);\nexport const image = (url, attrs) => u('image', { ...attrs, url });\nexport const column = (content, attrs) => u('column', attrs, content);\nexport const columnContainer = (content, attrs) => u('column-container', attrs, content);\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Object.<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array.<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array.<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: HChild[]): Root\n     *   (selector: string, properties?: HProperties, ...children: HChild[]): Element\n     *   (selector: string, ...children: HChild[]): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {HChild[]} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array.<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array.<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array.<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array.<string>} values\n * @returns {Object.<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","export var color = false\n","import {color} from './color.js'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Object} InspectOptions\n * @property {boolean} [showPositions=true]\n */\n\n/* c8 ignore next */\nexport var inspect = color ? inspectColor : inspectNoColor\n\nvar own = {}.hasOwnProperty\n\nvar bold = ansiColor(1, 22)\nvar dim = ansiColor(2, 22)\nvar yellow = ansiColor(33, 39)\nvar green = ansiColor(32, 39)\n\n// ANSI color regex.\n/* eslint-disable-next-line no-control-regex */\nvar colorExpression = /(?:(?:\\u001B\\[)|\\u009B)(?:\\d{1,3})?(?:(?:;\\d{0,3})*)?[A-M|f-m]|\\u001B[A-M]/g\n\n/**\n * Inspects a node, without using color.\n *\n * @param {unknown} node\n * @param {InspectOptions} [options]\n * @returns {string}\n */\nexport function inspectNoColor(node, options) {\n  return inspectColor(node, options).replace(colorExpression, '')\n}\n\n/**\n * Inspects a node, using color.\n *\n * @param {unknown} tree\n * @param {InspectOptions} [options]\n * @returns {string}\n */\nexport function inspectColor(tree, options) {\n  var positions =\n    !options ||\n    options.showPositions === null ||\n    options.showPositions === undefined\n      ? true\n      : options.showPositions\n\n  return inspectValue(tree)\n\n  /**\n   * @param {unknown} node\n   * @returns {string}\n   */\n  function inspectValue(node) {\n    if (node && typeof node === 'object' && 'length' in node) {\n      // @ts-ignore looks like a list of nodes.\n      return inspectNodes(node)\n    }\n\n    // @ts-ignore looks like a single node.\n    if (node && node.type) {\n      // @ts-ignore looks like a single node.\n      return inspectTree(node)\n    }\n\n    return inspectNonTree(node)\n  }\n\n  /**\n   * @param {unknown} value\n   * @returns {string}\n   */\n  function inspectNonTree(value) {\n    return JSON.stringify(value)\n  }\n\n  /**\n   * @param {Node[]} nodes\n   * @returns {string}\n   */\n  function inspectNodes(nodes) {\n    /** @type {Array.<string>} */\n    var result = []\n    var index = -1\n\n    while (++index < nodes.length) {\n      result.push(\n        dim((index < nodes.length - 1 ? '├' : '└') + '─' + index) +\n          ' ' +\n          indent(\n            inspectValue(nodes[index]),\n            (index < nodes.length - 1 ? dim('│') : ' ') + '   ',\n            true\n          )\n      )\n    }\n\n    return result.join('\\n')\n  }\n\n  /**\n   * @param {Object.<string, unknown>} object\n   * @returns {string}\n   */\n  function inspectFields(object) {\n    /** @type {Array.<string>} */\n    var result = []\n    /** @type {string} */\n    var key\n    /** @type {unknown} */\n    var value\n    /** @type {string} */\n    var formatted\n\n    for (key in object) {\n      /* c8 ignore next 1 */\n      if (!own.call(object, key)) continue\n\n      value = object[key]\n\n      if (\n        value === undefined ||\n        // Standard keys defined by unist that we format differently.\n        // <https://github.com/syntax-tree/unist>\n        key === 'type' ||\n        key === 'value' ||\n        key === 'children' ||\n        key === 'position' ||\n        // Ignore `name` (from xast) and `tagName` (from `hast`) when string.\n        (typeof value === 'string' && (key === 'name' || key === 'tagName'))\n      ) {\n        continue\n      }\n\n      // A single node.\n      if (\n        value &&\n        typeof value === 'object' &&\n        // @ts-ignore looks like a node.\n        value.type &&\n        key !== 'data' &&\n        key !== 'attributes' &&\n        key !== 'properties'\n      ) {\n        // @ts-ignore looks like a node.\n        formatted = inspectTree(value)\n      }\n      // A list of nodes.\n      else if (\n        value &&\n        typeof value === 'object' &&\n        'length' in value &&\n        value[0] &&\n        value[0].type\n      ) {\n        // @ts-ignore looks like a list of nodes.\n        formatted = '\\n' + inspectNodes(value)\n      } else {\n        formatted = inspectNonTree(value)\n      }\n\n      result.push(\n        key + dim(':') + (/\\s/.test(formatted.charAt(0)) ? '' : ' ') + formatted\n      )\n    }\n\n    return indent(\n      result.join('\\n'),\n      // @ts-ignore looks like a parent node.\n      (object.children && object.children.length > 0 ? dim('│') : ' ') + ' '\n    )\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {string}\n   */\n  function inspectTree(node) {\n    var result = [formatNode(node)]\n    var fields = inspectFields(node)\n    // @ts-ignore looks like a parent.\n    var content = inspectNodes(node.children || [])\n    if (fields) result.push(fields)\n    if (content) result.push(content)\n    return result.join('\\n')\n  }\n\n  /**\n   * Colored node formatter.\n   *\n   * @param {Node} node\n   * @returns {string}\n   */\n  function formatNode(node) {\n    var result = [bold(node.type)]\n    var kind = node.tagName || node.name\n    var position = positions ? stringifyPosition(node.position) : ''\n\n    if (typeof kind === 'string') {\n      result.push('<', kind, '>')\n    }\n\n    if (node.children) {\n      // @ts-ignore looks like a parent.\n      result.push(dim('['), yellow(node.children.length), dim(']'))\n    } else if (typeof node.value === 'string') {\n      result.push(' ', green(inspectNonTree(node.value)))\n    }\n\n    if (position) {\n      result.push(' ', dim('('), position, dim(')'))\n    }\n\n    return result.join('')\n  }\n}\n\n/**\n * @param {string} value\n * @param {string} indentation\n * @param {boolean} [ignoreFirst=false]\n * @returns {string}\n */\nfunction indent(value, indentation, ignoreFirst) {\n  var lines = value.split('\\n')\n  var index = ignoreFirst ? 0 : -1\n\n  if (!value) return value\n\n  while (++index < lines.length) {\n    lines[index] = indentation + lines[index]\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {Position} value\n * @returns {string}\n */\nfunction stringifyPosition(value) {\n  /** @type {Position} */\n  // @ts-ignore\n  var position = value || {}\n  /** @type {Array.<string>} */\n  var result = []\n  /** @type {Array.<string>} */\n  var positions = []\n  /** @type {Array.<string>} */\n  var offsets = []\n\n  point(position.start)\n  point(position.end)\n\n  if (positions.length > 0) result.push(positions.join('-'))\n  if (offsets.length > 0) result.push(offsets.join('-'))\n\n  return result.join(', ')\n\n  /**\n   * @param {Point} value\n   */\n  function point(value) {\n    if (value) {\n      positions.push((value.line || 1) + ':' + (value.column || 1))\n\n      if ('offset' in value) {\n        offsets.push(String(value.offset || 0))\n      }\n    }\n  }\n}\n\n/**\n * Factory to wrap values in ANSI colours.\n *\n * @param {number} open\n * @param {number} close\n * @returns {function(string): string}\n */\nfunction ansiColor(open, close) {\n  return color\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function color(value) {\n    return '\\u001B[' + open + 'm' + value + '\\u001B[' + close + 'm'\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Properties} Properties\n * @typedef {Parent['children'][number]|Root} Node\n *\n * @typedef {Properties[string]} PropertyValue Possible property values\n * @typedef {string|number|boolean} PrimitivePropertyValue Possible primitive HTML attribute values\n * @typedef {string|[string, ...PrimitivePropertyValue[]]} AttributeValue\n * @typedef {Object.<string, Array.<PrimitivePropertyValue>>} AttributeMap\n *\n * @typedef Schema Sanitization configuration\n * @property {Object<string, Array<AttributeValue>>} [attributes] Map of tag names to allowed property names. The special '*' key defines property names allowed on all elements\n * @property {Object<string, Object<string, PropertyValue>>} [required] Map of tag names to required property names and their default property value\n * @property {Array.<string>} [tagNames] List of allowed tag names\n * @property {Object<string, Array.<string>>} [protocols] Map of protocols to allow in property values\n * @property {Object<string, Array.<string>>} [ancestors] Map of tag names to their required ancestor elements\n * @property {Array.<string>} [clobber] List of allowed property names which can clobber\n * @property {string} [clobberPrefix] Prefix to use before potentially clobbering property names\n * @property {Array.<string>} [strip] Names of elements to strip from the tree\n * @property {boolean} [allowComments] Whether to allow comments\n * @property {boolean} [allowDoctypes] Whether to allow doctypes\n *\n * @typedef {(schema: Schema, value: unknown, node: Node, stack: Array.<string>) => unknown} Handler\n * @typedef {Object.<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition)} NodeDefinitionGetter\n * @typedef {Object.<string, NodeDefinition|NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nvar own = {}.hasOwnProperty\nvar push = [].push\n\n/** @type {NodeSchema} */\nvar nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node Hast tree to sanitize\n * @param {Schema} [schema] Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  var ctx = {type: 'root', children: []}\n  /** @type {Node|Array.<Node>} */\n  var replace\n\n  if (node && typeof node === 'object' && node.type) {\n    replace = one(Object.assign({}, defaultSchema, schema || {}), node, [])\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-ignore Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array.<string>} stack\n * @returns {Node|Array.<Node>|null}\n */\nfunction one(schema, node, stack) {\n  var type = node && node.type\n  /** @type {Node} */\n  // @ts-ignore rest of props added later.\n  var replacement = {type: node.type}\n  /** @type {boolean} */\n  var replace\n  /** @type {NodeDefinition|NodeDefinitionGetter} */\n  var definition\n  /** @type {NodeDefinition} */\n  var allowed\n  /** @type {unknown} */\n  var result\n  /** @type {string} */\n  var key\n\n  if (own.call(nodeSchema, type)) {\n    definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      replace = true\n      allowed = Object.assign({}, definition, nodeSchema['*'])\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = null\n            // Set the non-safe value.\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : null\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array.<Node>} children\n * @returns {Array.<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array.<Node>} */\n  var results = []\n  var index = -1\n  /** @type {Node|Array.<Node>} */\n  var value\n\n  if (Array.isArray(children)) {\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      value = one(schema, children[index], stack)\n\n      if (value) {\n        if ('length' in value) {\n          push.apply(results, value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : null\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : null\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  var name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  var reqs = schema.required || {}\n  var props = properties || {}\n  var allowed = Object.assign(\n    {},\n    toPropertyValueMap(schema.attributes['*']),\n    toPropertyValueMap(\n      name && own.call(schema.attributes, name) ? schema.attributes[name] : []\n    )\n  )\n  /** @type {Properties} */\n  var result = {}\n  /** @type {Array.<PrimitivePropertyValue>} */\n  var definition\n  /** @type {PropertyValue} */\n  var value\n  /** @type {string} */\n  var key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = props[key]\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @type {Handler}\n * @returns {string|false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  var name = typeof tagName === 'string' ? tagName : ''\n  var index = -1\n\n  if (!name || name === '*' || !schema.tagNames.includes(name)) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  var result = typeof value === 'string' ? value : ''\n  var index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array.<unknown>} values\n * @param {string} prop\n * @param {Array.<PrimitivePropertyValue>} definition\n * @returns {Array.<string|number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  var index = -1\n  /** @type {Array.<string|number>} */\n  var result = []\n  /** @type {PropertyValue} */\n  var value\n\n  while (++index < values.length) {\n    value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-ignore Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {Array.<PropertyValue>} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 || definition.includes(value))\n  ) {\n    return schema.clobber.includes(prop) ? schema.clobberPrefix + value : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  var url = String(value)\n  var colon = url.indexOf(':')\n  var questionMark = url.indexOf('?')\n  var numberSign = url.indexOf('#')\n  var slash = url.indexOf('/')\n  var protocols = own.call(schema.protocols, prop)\n    ? schema.protocols[prop].concat()\n    : []\n  var index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Array.<AttributeValue>} values\n * @returns {AttributeMap}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeMap} */\n  var result = {}\n  var index = -1\n  /** @type {AttributeValue} */\n  var value\n\n  while (++index < values.length) {\n    value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteLabelTagName HTML used for the footnote label\n * @property {Properties} footnoteLabelProperties properties on the HTML tag used for the footnote label\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={id: 'footnote-label', className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    id: 'footnote-label',\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('../../types.js').Comment} Comment\n */\n\nimport {convert} from 'unist-util-is'\n\n/** @type {import('unist-util-is').AssertPredicate<Comment>} */\n// @ts-ignore\nexport const comment = convert('comment')\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children\n    let offset = index + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../../types.js').Node} Node\n * @typedef {import('../../types.js').Text} Text\n */\n\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\n\n/** @type {import('unist-util-is').AssertPredicate<Text>} */\n// @ts-ignore\nconst isText = convert('text')\n\n/**\n * Check if `node` starts with whitespace.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function whitespaceStart(node) {\n  return isText(node) && whitespace(node.value.charAt(0))\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Object.<string, OmitHandle>} handlers\n * @returns {OmitHandle}\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @type {OmitHandle}\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return !next || (!comment(next) && !whitespaceStart(next))\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @type {OmitHandle}\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? isElement(next, [\n        'address',\n        'article',\n        'aside',\n        'blockquote',\n        'details',\n        'div',\n        'dl',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'footer',\n        'form',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'header',\n        'hgroup',\n        'hr',\n        'main',\n        'menu',\n        'nav',\n        'ol',\n        'p',\n        'pre',\n        'section',\n        'table',\n        'ul'\n      ])\n    : !parent ||\n        // Confusing parent.\n        !isElement(parent, [\n          'a',\n          'audio',\n          'del',\n          'ins',\n          'map',\n          'noscript',\n          'video'\n        ])\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @type {OmitHandle}\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @type {OmitHandle}\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @type {OmitHandle}\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @type {OmitHandle}\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['rp', 'rt'])\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @type {OmitHandle}\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @type {OmitHandle}\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['option', 'optgroup'])\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @type {OmitHandle}\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['menuitem', 'hr', 'menu'])\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @type {OmitHandle}\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @type {OmitHandle}\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @type {OmitHandle}\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @type {OmitHandle}\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['td', 'th'])\n}\n","/**\n * @typedef {import('../types.js').Omission} Omission\n */\n\nimport {opening} from './opening.js'\nimport {closing} from './closing.js'\n\n/** @type {Omission} */\nexport const omission = {opening, closing}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n * @typedef {import('../types.js').Child} Child\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || !comment(head)\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @type {OmitHandle}\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array.<string>} */\n  const seen = []\n  let index = -1\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n    if (isElement(child, ['title', 'base'])) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (!comment(head) &&\n      !whitespaceStart(head) &&\n      !isElement(head, ['meta', 'link', 'script', 'style', 'template']))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @type {OmitHandle}\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    isElement(previous, 'colgroup') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    isElement(previous, ['thead', 'tbody']) &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'tr')\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","// Maps of subsets.\n// Each value is a matrix of tuples.\n// The first value causes parse errors, the second is valid.\n// Of both values, the first value is unsafe, and the second is safe.\nexport const constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(ctx, node, _, parent) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    // @ts-expect-error: hush.\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, ctx.entities, {subset: ['<', '&']})\n      )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n * @typedef {import('./types.js').Parent} Parent\n */\n\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {ccount} from 'ccount'\nimport {constants} from './constants.js'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {raw} from './raw.js'\nimport {text} from './text.js'\n\n/**\n * @type {Object.<string, Handle>}\n */\nconst handlers = {\n  comment,\n  doctype,\n  element,\n  // @ts-ignore `raw` is nonstandard\n  raw,\n  // @ts-ignore `root` is a parent.\n  root: all,\n  text\n}\n\nconst own = {}.hasOwnProperty\n\n/**\n * @type {Handle}\n */\nexport function one(ctx, node, index, parent) {\n  if (!node || !node.type) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (!own.call(handlers, node.type)) {\n    throw new Error('Cannot compile unknown node `' + node.type + '`')\n  }\n\n  return handlers[node.type](ctx, node, index, parent)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @type {Handle}\n * @param {Parent} parent\n */\nexport function all(ctx, parent) {\n  /** @type {Array.<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = one(ctx, children[index], index, parent)\n  }\n\n  return results.join('')\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function element(ctx, node, index, parent) {\n  const schema = ctx.schema\n  const omit = schema.space === 'svg' ? undefined : ctx.omit\n  let selfClosing =\n    schema.space === 'svg'\n      ? ctx.closeEmpty\n      : ctx.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array.<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    ctx.schema = svg\n  }\n\n  const attrs = serializeAttributes(ctx, node.properties)\n\n  const content = all(\n    ctx,\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  ctx.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !omit.opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (selfClosing && (schema.space === 'svg' || ctx.close)) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !ctx.tightClose ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {Properties} props\n * @returns {string}\n */\nfunction serializeAttributes(ctx, props) {\n  /** @type {Array.<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n  /** @type {string} */\n  let value\n  /** @type {string} */\n  let last\n\n  for (key in props) {\n    if (props[key] !== undefined && props[key] !== null) {\n      value = serializeAttribute(ctx, key, props[key])\n      if (value) values.push(value)\n    }\n  }\n\n  while (++index < values.length) {\n    last = ctx.tight ? values[index].charAt(values[index].length - 1) : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(ctx, key, value) {\n  const info = find(ctx.schema, key)\n  let quote = ctx.quote\n  /** @type {string} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, ctx.entities, {\n      // Always encode without parse errors in non-HTML.\n      subset:\n        constants.name[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t\n  // test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  value =\n    typeof value === 'object' && 'length' in value\n      ? // `spaces` doesn’t accept a second argument, but it’s given here just to\n        // keep the code cleaner.\n        (info.commaSeparated ? commas : spaces)(value, {\n          padLeft: !ctx.tightLists\n        })\n      : String(value)\n\n  if (ctx.collapseEmpty && !value) return name\n\n  // Check unquoted value.\n  if (ctx.unquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, ctx.entities, {\n        subset: constants.unquoted[ctx.valid][ctx.safe],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {\n      quote = ctx.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, ctx.entities, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[\n            ctx.schema.space === 'html' ? ctx.valid : 1\n          ][ctx.safe],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Comment} Comment\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(ctx, node) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return ctx.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, ctx.entities, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, ctx.entities, {subset: ['<', '>']})\n    )\n  }\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n */\n\n/**\n * @type {Handle}\n */\nexport function doctype(ctx) {\n  return (\n    '<!' +\n    (ctx.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (ctx.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * @type {Handle}\n * @param {Raw} node\n */\nexport function raw(ctx, node, index, parent) {\n  // @ts-ignore Hush.\n  return ctx.dangerous ? node.value : text(ctx, node, index, parent)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Quote} Quote\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {omission} from './omission/index.js'\nimport {one} from './tree.js'\n\n/**\n * @param {Node|Array.<Node>} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toHtml(node, options = {}) {\n  const quote = options.quote || '\"'\n  /** @type {Quote} */\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {Context} */\n  const context = {\n    valid: options.allowParseErrors ? 0 : 1,\n    safe: options.allowDangerousCharacters ? 0 : 1,\n    schema: options.space === 'svg' ? svg : html,\n    omit: options.omitOptionalTags ? omission : undefined,\n    quote,\n    alternative,\n    smart: options.quoteSmart,\n    unquoted: options.preferUnquoted,\n    tight: options.tightAttributes,\n    upperDoctype: options.upperDoctype,\n    tightDoctype: options.tightDoctype,\n    bogusComments: options.bogusComments,\n    tightLists: options.tightCommaSeparatedLists,\n    tightClose: options.tightSelfClosing,\n    collapseEmpty: options.collapseEmptyAttributes,\n    dangerous: options.allowDangerousHtml,\n    voids: options.voids || htmlVoidElements.concat(),\n    entities: options.entities || {},\n    close: options.closeSelfClosing,\n    closeEmpty: options.closeEmptyElements\n  }\n\n  return one(\n    context,\n    // @ts-ignore Assume `node` does not contain a root.\n    Array.isArray(node) ? {type: 'root', children: node} : node,\n    null,\n    null\n  )\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { fromMarkdown } from 'mdast-util-from-markdown';\nimport { h } from 'hastscript';\nimport { inspectNoColor } from 'unist-util-inspect';\nimport { map } from 'unist-util-map';\nimport { removePosition } from 'unist-util-remove-position';\nimport { sanitize, defaultSchema } from 'hast-util-sanitize';\nimport { toHast } from 'mdast-util-to-hast';\nimport { toHtml } from 'hast-util-to-html';\nimport deepmerge from 'deepmerge';\n\nconst phrasingHast = deepmerge(defaultSchema, {\n  tagNames: [\n    'em',\n    'strong',\n    'a',\n    'strike',\n  ],\n});\n\nconst getAttrs = (node) => {\n  const nodeAttrs = new Set(['type', 'children', 'value']);\n  Object.entries(node).reduce((attrs, [key, value]) => {\n    if (nodeAttrs.has(key)) return attrs;\n    attrs[key] = value;\n    return value;\n  }, {});\n};\n\n// Very basic, we match each node type and transform it to a HAST node, the result HAST tree\n// can then be stringified, producing HTML\nconst nodeRenderer = {\n  root: (node) => h('div', getAttrs(node), node.children),\n\n  paragraph: (node) => h('p', getAttrs(node), node.children),\n\n  heading: (node) => h(`h${node.level}`, getAttrs(node), node.children),\n\n  'media-container': (node) => {\n    const layout = node.layout || '1x1';\n\n    let rows;\n    let onRow;\n    if (layout.includes('x')) {\n      [onRow, rows] = layout.split('x').map((x) => parseInt(x, 10));\n      onRow = new Array(rows).fill(onRow);\n    } else if (layout.includes('-')) {\n      onRow = layout.split('-').map((x) => parseInt(x, 10));\n      rows = 2;\n    } else {\n      throw new Error(`Invalid layout ${layout}`);\n    }\n\n    const containers = [];\n    let childIndex = 0;\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < onRow[i]; j++) {\n        row.push(h('div', { class: `item-${childIndex + 1}` }, [node.children[childIndex]]));\n        childIndex++;\n      }\n      containers.push(h('div', { class: `row row-${i + 1}` }, row));\n    }\n\n    Object.assign(node, { children: containers });\n\n    return h(\n      'div',\n      { ...getAttrs(node), class: `media-container layout-${layout}` },\n      node.children,\n    );\n  },\n\n  column: (node) => h('div', { ...getAttrs(node), class: 'column' }, node.children),\n\n  'column-container': (node) => h('div', { ...getAttrs(node), class: 'column-container' }, node.children),\n\n  image: (node) => {\n    const attrs = { src: node.url };\n\n    if (node['aspect-ratio']) {\n      attrs.style = `aspect-ratio: ${node['aspect-ratio']}`;\n    }\n\n    return h('img', attrs);\n  },\n\n  text: (node) => {\n    const mdast = fromMarkdown(node.value);\n    const hast = toHast(mdast);\n    // get the only child of \"root\", a \"p\"\n    const content = hast.children[0];\n    // make it a \"span\" instead\n    return sanitize(h('span', content.children), phrasingHast);\n  },\n};\n\nexport const glsfToHast = (tree) => removePosition(map(tree, (node) => {\n  if (!nodeRenderer[node.type]) {\n    return node;\n  }\n  return nodeRenderer[node.type](node);\n}));\n\nexport const glsfToHtml = (tree) => {\n  const hast = glsfToHast(tree);\n  const html = toHtml(hast);\n  return html;\n};\n\nexport const inspectHast = (tree) => inspectNoColor(glsfToHast(tree));\n","/**\n * @typedef {import('unist').Node} Node\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * Utility to remove positions from a tree\n *\n * @param node The unist tree\n * @param force if `force` is given, uses `delete`, otherwise, sets positions to `undefined`.\n * @returns The same node, but either with `position: undefined` or w/o `position` fields\n */\nexport const removePosition =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, force?: false) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, force: true) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} node\n     * @param {boolean} [force=false]\n     * @returns {Tree}\n     */\n    function (node, force) {\n      visit(node, remove)\n\n      // @ts-ignore hush TS, we know what we’re doing.\n      return node\n\n      /**\n       * @param {Node} node the unist tree\n       */\n      function remove(node) {\n        if (force) {\n          delete node.position\n        } else {\n          node.position = undefined\n        }\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * Unist utility to create a new tree by mapping all nodes with the given function.\n *\n * @template {Node} Tree\n * @param {Tree} tree Tree to map\n * @param {import('./complex-types').MapFunction<Tree>} iteratee Function that returns a new node\n * @returns {Tree} New mapped tree.\n */\nexport function map(tree, iteratee) {\n  // @ts-expect-error Looks like a children.\n  return preorder(tree, null, null)\n\n  /** @type {import('./complex-types').MapFunction<Tree>} */\n  function preorder(node, index, parent) {\n    var newNode = Object.assign({}, iteratee(node, index, parent))\n\n    if ('children' in node) {\n      // @ts-expect-error Looks like a parent.\n      newNode.children = node.children.map(function (\n        /** @type {import('./complex-types').InclusiveDescendant<Tree>} */ child,\n        /** @type {number} */ index\n      ) {\n        return preorder(child, index, node)\n      })\n    }\n\n    return newNode\n  }\n}\n","import {\n  doc, heading, image, mediaContainer, paragraph, inspectHast, glsfToHtml, column, columnContainer,\n} from 'glsf';\n\nconst editor = document.getElementById('tree');\nconst debug = document.getElementById('debug');\nconst output = document.getElementById('output');\n\nconst tree = doc([\n  heading('Title', { level: 1 }),\n  heading('Subtitle', { level: 2 }),\n  paragraph('We*lcom*e'),\n  heading('Here are [columns](http://example.com)', { level: 2 }),\n  columnContainer([\n    column([\n      mediaContainer([\n        image('https://api.lorem.space/image/drink?w=600&h=300'),\n        image('https://api.lorem.space/image/drink?w=600&h=600'),\n        image('https://api.lorem.space/image/drink?w=600&h=600'),\n        image('https://api.lorem.space/image/drink?w=600&h=600'),\n      ], { layout: '1-3' }),\n    ]),\n    column([\n      paragraph('*Lorem **ipsum*** dolor sit amet, consectetur adipiscing elit.'),\n      paragraph('Quisque vulputate</p> dui eget lacus luctus, et vehicula dui sollicitudin.'),\n      heading('Subtitle', { level: 2 }),\n      paragraph('Duis et ultricies felis.'),\n    ]),\n  ]),\n  heading('Example 1-2 <script>alert(\"lol\")</script>', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=300'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '1-2' }),\n  heading('Example 1-3', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=300'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '1-3' }),\n  heading('Example 2x2', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '2x2' }),\n  heading('Example 3x3', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '3x3' }),\n]);\n\nfunction renderHtml() {\n  try {\n    const inspect = inspectHast(JSON.parse(editor.value));\n    debug.innerText = inspect;\n    const html = glsfToHtml(JSON.parse(editor.value));\n    output.innerHTML = html;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\neditor.innerHTML = JSON.stringify(tree, null, 2);\nrenderHtml();\n\neditor.addEventListener('input', renderHtml);\n"],"names":["$f1b322b5f75c9280$export$3b14a55fb2447963","type","props","value","node","String","Array","isArray","Object","assign","children","$c0ee7619c8d13692$export$9c206ddddb32a9b","text","$c0ee7619c8d13692$export$46e4a324ac90507f","attrs","$c0ee7619c8d13692$export$e91e3cc91e00b6bb","content","$c0ee7619c8d13692$export$5c452ff88e35e47d","url","$c0ee7619c8d13692$export$4e0c71f277ca26b3","$e7fc6d4d8cc7edf6$export$f84e8e69fd4488a5","options","includeImageAlt","$e7fc6d4d8cc7edf6$var$one","alt","$e7fc6d4d8cc7edf6$var$all","values","result","index","length","join","$12e1f70fcc453c5e$export$869882364835d202","list","start","remove","items","end","parameters","chunkStart","from","unshift","splice","apply","slice","$12e1f70fcc453c5e$export$4cbf152802aa238","$e4c7193d0ea74326$var$hasOwnProperty","hasOwnProperty","$e4c7193d0ea74326$export$86a865d89ef3c690","extensions","all","$e4c7193d0ea74326$var$syntaxExtension","extension","hook","left","call","undefined","right","code","$e4c7193d0ea74326$var$constructs","existing","before","add","push","$29a4e6ac3439aa44$export$d65d6b62c24d5436","$29a4e6ac3439aa44$var$regexCheck","$29a4e6ac3439aa44$export$ca8b5b1a6c320e6e","$29a4e6ac3439aa44$export$eca2752363989806","$29a4e6ac3439aa44$export$75c76db11865a9f4","$29a4e6ac3439aa44$export$35794a7d1db99380","$29a4e6ac3439aa44$export$4397998b34fe597d","$29a4e6ac3439aa44$export$67dbf494fc8394df","$29a4e6ac3439aa44$export$a30284361b3814b7","$29a4e6ac3439aa44$export$34a1dff1c0936953","$29a4e6ac3439aa44$export$2c6cf65c1127992a","$29a4e6ac3439aa44$export$a0ff789c034ffdf4","$29a4e6ac3439aa44$export$aa04114dd888a7a0","regex","test","fromCharCode","$e869f0e171755cfd$export$ae105c1eb063a0a2","effects","ok","max","limit","Number","POSITIVE_INFINITY","size","enter","prefix","consume","exit","$f8f5a9a2277f289c$export$a7db06668cad9adb","tokenize","contentStart","attempt","this","parser","constructs","contentInitial","lineStart","previous","token","contentType","next","data","$d7613f6bde1b6999$export$5a7bfc01df82fcd1","self","stack","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","point","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","Boolean","_gfmTableDynamicInterruptHack","check","$d7613f6bde1b6999$var$containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","line","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","entry","nok","document","disable","null","includes","$17fbffcaac743730$export$e3902bc0d835cad0","$20ce21f5d6e7e9bc$export$3ff61ec196ff408b","context","called","resolve","resolveAll","$278d23821030f843$export$45b92471da762af7","name","attentionMarkers","marker","sequence","after","open","close","_open","_close","group","openingSequence","closingSequence","use","nextEvents","sliceSerialize","charCodeAt","$278d23821030f843$var$movePoint","insideSpan","column","_bufferIndex","$859900db41035b34$export$17ddf85e4c916ad6","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","$ac686123818532ec$export$d50d28ce3ab2a612","partial","$cfdbe2317117547e$export$200dcd0a5903c968","state","_container","$4bab96ad8d5c4a2e$export$2005478564e78d96","$f412139aa7993fb1$export$ec810d1aafce79a7","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","part","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","target","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","$4b18a574327b3e9a$var$own","$4b18a574327b3e9a$export$289b6a6320f709b4","$3bcdc327322431a5$export$e31905600aaf3d8e","numeric","$bb068a9c0cba868c$export$c23e4921f8d87e7c","effects1","ok1","nok1","self1","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","nonLazyLine","tail","initialPrefix","sequenceOpen","infoOpen","openAfter","info","infoAfter","meta","contentContinue","$e123bdc04cd6f07e$export$47910b7ab28d1853","afterStartPrefix","afterPrefix","$e123bdc04cd6f07e$var$indentedContent","$ef5381895804a6d6$export$d24f93e715f9df88","tailExitIndex","headEnterIndex","$c16e33aba3b469e7$export$12949d1dd00fddf4","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","$c16e33aba3b469e7$var$subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","pop","$bd61f7153afa216f$export$a7db06668cad9adb","contentEnd","$bd61f7153afa216f$var$continuationConstruct","prefixed","$4f25fb3e593e027b$export$2e6c8deaa96af245","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","$c31c31d59f42c3b1$export$7b768614d8ba97a7","markerType","atBreak","label","labelEscape","$9d2073b39105f12c$export$f970569cc855e483","atFirstTitleBreak","atTitleBreak","title","titleEscape","$b2e21f33aa285369$export$1f27bd1aa33ce173","$e2e049f613f5aa36$export$806d55e226cfcd08","replace","toLowerCase","toUpperCase","$1cbfa6ff7a040f1b$export$69f215ed977cdb73","identifier","labelAfter","$1cbfa6ff7a040f1b$var$titleConstruct","defined","$ffd26159235d5d5e$export$86c573ab9e06f418","$57dd3a0f2b6459b1$export$3871e9deb360695c","fenceOpenInside","headingBreak","$6327c340738694da$export$7364aee1c59d1879","$6327c340738694da$export$948e66da505d080","$cec208f09ebbab23$export$476ac411cb7d0d8f","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","$cec208f09ebbab23$var$nextBlankConstruct","htmlContinueStart","done","htmlLineEnd","continuationRawEndTag","resolveTo","$303f8fe574df3bfe$export$398af27f284914fe","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","$ea86654c300e4a31$export$470a5dafbbf62654","labelStart","_balanced","_inactive","balanced","afterLabelEnd","$ea86654c300e4a31$var$resourceConstruct","$ea86654c300e4a31$var$fullReferenceConstruct","$ea86654c300e4a31$var$collapsedReferenceConstruct","media","destinationAfter","afterLabel","$25ddf52767eb13ff$export$3d754936e25aa5f5","$7b7d5f4b809a4842$export$5c0cee0701a3b584","$906a3a342c95b44c$export$8e62e0ad51c97b2","$dee401b6ce919182$export$ba7b13e047416c03","$06c2de0f65d182af$export$8837f4fc672e936d","initialSize","atMarker","inside","onBlank","$06c2de0f65d182af$var$listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","$06c2de0f65d182af$var$indentConstruct","$9e21aaa48fc4d9ee$export$e104e2de391dfde9","paragraph","definition","heading","$4b3165d6df275e50$export$ccc7b0636abaffc3","initial","flowInitial","afterConstruct","$f4ae529a850071ea$export$50397835cbfdbc24","$f4ae529a850071ea$var$createResolver","$f4ae529a850071ea$export$22b082955e083ec3","$f4ae529a850071ea$var$initializeFactory","$f4ae529a850071ea$export$6f093cfa640b7166","field","text1","notText","$f4ae529a850071ea$var$resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","$52fa03d809874297$export$ae34f10ee4b29837","initialize","from1","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","$52fa03d809874297$var$serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","$52fa03d809874297$var$sliceChunks","chunkIndex","go","_","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","$a23d4f3de357f476$export$5a7bfc01df82fcd1","$a23d4f3de357f476$export$5a2181fb44b58173","$a23d4f3de357f476$export$cf8bead395eff824","$a23d4f3de357f476$export$ccc7b0636abaffc3","$a23d4f3de357f476$export$22b082955e083ec3","$a23d4f3de357f476$export$6f093cfa640b7166","$a23d4f3de357f476$export$d44f260a3f9b69f5","$a23d4f3de357f476$export$b9c0b60d74426aea","$a23d4f3de357f476$export$e20fbacbb41798b","$30104a18a20636a9$export$98e6a39c04603d36","$a23d4f3de357f476$exports","concat","string","$83182e90bef27f46$var$search","$83182e90bef27f46$export$fc37fe19dfda43ee","atCarriageReturn","encoding","match","endPosition","toString","lastIndex","exec","Math","ceil","$a08e754ac394a6a8$export$bd0e6e1378a871d7","$cef7ee5a00b511a1$export$15a69557afac2c20","base","parseInt","$a18f14805da499ce$var$characterEscapeOrReference","$a18f14805da499ce$export$a0fb664af7d0cc44","$a18f14805da499ce$var$decode","$0","$1","$2","head","hex","$5ad016942853faf9$export$c304dd45fe166145","$5ad016942853faf9$var$position","position","$5ad016942853faf9$var$point","point1","$5ad016942853faf9$var$index","pos","$f867d29c1765cce2$var$own","$f867d29c1765cce2$export$d744d789c09bfde6","config","$f867d29c1765cce2$var$configure","transforms","canContainEols","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","characterEscape","characterReference","codeFenced","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","html","htmlFlowData","htmlText","htmlTextData","listItem","listItem1","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","data1","compile","tree","tokenStack","listStack","resume","setData","getData","prepareList","handler","$f867d29c1765cce2$var$defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","key","d","errorHandler","onExitError","Error","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","$f867d29c1765cce2$var$compiler","combined","$f867d29c1765cce2$var$extension","extension1","$94b37d2aa82ea2e8$export$19342e026b58ebb7","constructor","property","normal","space","$b496f3d0c0033e1d$export$4950aa0f605343fb","definitions","$3a9fe96e73147fa2$export$a3295358bff77e","prototype","$4524031c35257d22$export$c4868e4a24d48fad","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","$9254442d656c2274$var$powers","$9254442d656c2274$export$4a21f16c33752377","$9254442d656c2274$var$increment","$9254442d656c2274$export$55e9e1fbc638dc8f","$9254442d656c2274$export$242ac3d3042558aa","$9254442d656c2274$export$98e628dec113755e","$9254442d656c2274$export$ab8645c862eb5a3e","$9254442d656c2274$export$9c8d678629b3d3","$9254442d656c2274$export$2ad25cfebf36cacd","$95ead23fa1e6d32e$var$checks","keys","$9254442d656c2274$exports","$95ead23fa1e6d32e$export$ea6b9f0064e88c9b","mask","super","$95ead23fa1e6d32e$var$mark","$a9647e6cf37988ee$var$own","$a9647e6cf37988ee$export$185802fd694ee1f5","properties","transform","attributes","$e052f42308f9dfea$export$2bd1230ec7600845","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","$9e23a9af5f5feeff$export$f2913fe8983302e","xmlLang","xmlBase","xmlSpace","$d4c5983b6dea4133$export$5b10b3bc32d7efbc","$5e2f3c9b04cd1f38$export$32b9e4cec9c208e1","$b40c380e90c290b1$export$e20c24a128671213","xmlnsxlink","xmlns","xmlnsXLink","$904cd8e56bf8e43b$export$4d2d26490572750a","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","$86bf946a72246742$export$c0bb0b647f701bb5","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","step","style","tabIndex","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","$7dee8203e10d530f$export$7ed1367e7fa1ad68","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","$9021e9cf37382150$var$valid","$9021e9cf37382150$var$dash","$9021e9cf37382150$var$cap","$9021e9cf37382150$export$71aa6c912b956294","schema","Type","charAt","rest","$9021e9cf37382150$var$camelcase","dashes","$9021e9cf37382150$var$kebab","$cadac7d763576473$export$c0bb0b647f701bb5","$cadac7d763576473$export$7ed1367e7fa1ad68","$b2a32057f385f3dd$var$search","$b2a32057f385f3dd$export$529769e360e2fa1b","selector","defaultTagName","subvalue","$d1793df8b75db288$export$98e6a39c04603d36","input","trim","split","$d1793df8b75db288$export$fac44ee5b035f737","$366078f2353ec404$export$98e6a39c04603d36","tokens","indexOf","$366078f2353ec404$export$fac44ee5b035f737","settings","padRight","padLeft","$b1f9eb5d1329fb18$var$buttonTypes","Set","$b1f9eb5d1329fb18$var$own","$b1f9eb5d1329fb18$var$addProperty","isNaN","$b1f9eb5d1329fb18$var$parsePrimitive","$b1f9eb5d1329fb18$var$style","finalResult","$b1f9eb5d1329fb18$var$addChild","nodes","$d7527e59fc8b4c5f$export$dda1d9f60106f0e9","caseSensitive","$b1f9eb5d1329fb18$var$createAdjustMap","has","$2a993b6303a9c6a1$var$own","$2a993b6303a9c6a1$var$bold","$2a993b6303a9c6a1$var$ansiColor","$2a993b6303a9c6a1$var$dim","$2a993b6303a9c6a1$var$yellow","$2a993b6303a9c6a1$var$green","$2a993b6303a9c6a1$var$colorExpression","$2a993b6303a9c6a1$export$2c85b58e9120c769","$2a993b6303a9c6a1$export$812907a7b30da7fd","positions","showPositions","inspectValue","inspectNodes","inspectTree","inspectNonTree","JSON","stringify","$2a993b6303a9c6a1$var$indent","formatNode","formatted","inspectFields","value1","offsets","$2a993b6303a9c6a1$var$stringifyPosition","indentation","ignoreFirst","lines","$187b6daf6746b4cc$export$9c68d69a4c5bbcf9","$187b6daf6746b4cc$var$ok","$187b6daf6746b4cc$var$castFactory","$187b6daf6746b4cc$var$typeFactory","tests","checks","index1","any","$187b6daf6746b4cc$var$anyFactory","$187b6daf6746b4cc$var$propsFactory","$052345d70d5b9ac3$export$70008a21eb6de899","visitor","reverse","factory","parents","defineProperty","visit","subresult","grandparents","$052345d70d5b9ac3$var$toResult","$0cbeb405a1294124$export$bf638b60ea8b89b7","$c90609f5c00de269$export$1db618b7b2275ea1","strip","clobberPrefix","clobber","ancestors","tbody","tfoot","thead","td","th","tr","protocols","tagNames","a","img","li","blockquote","del","ins","q","$88daba10b15b26a8$var$own","$88daba10b15b26a8$var$push","$88daba10b15b26a8$var$nodeSchema","root","$88daba10b15b26a8$var$all","doctype","allowDoctypes","$88daba10b15b26a8$var$handleDoctypeName","allowComments","$88daba10b15b26a8$var$handleCommentValue","element","$88daba10b15b26a8$var$handleTagName","reqs","allowed","$88daba10b15b26a8$var$toPropertyValueMap","$88daba10b15b26a8$var$handlePropertyValues","$88daba10b15b26a8$var$handlePropertyValue","$88daba10b15b26a8$var$allow","$88daba10b15b26a8$export$83d2e9e3e4ee39ed","ctx","$88daba10b15b26a8$var$one","replacement","questionMark","numberSign","slash","$88daba10b15b26a8$var$safeProtocol","$f17728578a6fa98d$export$771bf3e4949bfbee","$f17728578a6fa98d$var$point","$f17728578a6fa98d$export$da309cdce9dc2a25","point2","$5e1f263d98731c00$var$own","$5e1f263d98731c00$export$d79264f26953ec1","cache","$5e1f263d98731c00$var$clean","$55836ea7c6efc92e$var$own","$55836ea7c6efc92e$var$unknown","h","augment","$55836ea7c6efc92e$export$84bf76cd7afc7469","$55836ea7c6efc92e$export$80bf7733f1207381","fn","handlers","passThrough","$55836ea7c6efc92e$var$returnNode","unknownHandler","$9156dc2af8f0377d$var$characterReferences","$bc8a876b6e04ad0b$export$d130a2d684099e5a","protocol","skip","encodeURIComponent","$bc8a876b6e04ad0b$var$normalizeUri","$61e78010ea3c3754$export$4997ffc0176396a6","loose","$c997e2bd7b86edb7$export$adb608be33961c98","listItems","footnoteOrder","footnoteById","safeId","referenceIndex","backReferences","footnoteCounts","backReference","dataFootnoteBackref","footnoteBackLabel","tailTail","dataFootnotes","footnoteLabelTagName","parse","footnoteLabelProperties","footnoteLabel","$057fa58eaca8d17c$export$7f87ee744075c1ba","counter","reuseCounter","dataFootnoteRef","$ed0696c72b76fd54$var$encodeCache","$ed0696c72b76fd54$var$encode","exclude","keepEscaped","i","l","nextCode","defaultChars","ch","$ed0696c72b76fd54$var$getEncodeCache","$a6a1144cd216620b$export$3fdd26f3d9e7dc78","subtype","suffix","contents","$acc6664076cc86f3$var$listItemLoose","componentChars","$ed0696c72b76fd54$exports","$249373105993c1dd$export$a771f20bdd13def9","source","search","last","$249373105993c1dd$var$trimLine","codePointAt","$f7f87bcd916e8176$export$455ce229eb3d2472","break","code1","delete","no","dangerous","$parcel$interopDefault","$acc6664076cc86f3$var$listLoose","wrapped","child","row","out","cellIndex","cell","toml","$f7f87bcd916e8176$var$ignore","yaml","footnoteDefinition","$3e59099e973701ba$var$own","$3e59099e973701ba$var$factory","allowDangerousHtml","hName","hProperties","hChildren","$3e59099e973701ba$export$c0e4c5cf07538633","foot","$7b4eb755cb6f604f$export$762508062d068de","$4a4b4832cdd6ee68$export$45a5e7f76e0caa8d","$4a4b4832cdd6ee68$export$26aad476166fd89e","$4a4b4832cdd6ee68$var$element","$4a4b4832cdd6ee68$var$tagNameFactory","$4a4b4832cdd6ee68$var$castFactory","$4a4b4832cdd6ee68$var$anyFactory","$073df6f55905c8f4$export$4a34f930e789283c","$2310f26043a9582b$export$7af1228ff777d175","thing","$f25a978b30793b79$export$a0f7cf204d8f22ba","$f25a978b30793b79$var$siblings","$f25a978b30793b79$export$b103c35f55382246","increment","includeWhitespace","siblings1","$f0f29713c97c5797$var$isText","$f0f29713c97c5797$export$4eb14813c177c568","$66debffa6f295f4e$var$own","$66debffa6f295f4e$export$67d072dabf9c1c63","$589644195d81eb29$export$4e69df80cd44263b","$589644195d81eb29$var$headOrColgroupOrCaption","rt","$589644195d81eb29$var$rubyElement","rp","colgroup","caption","$589644195d81eb29$var$cells","$8dc24572e8300657$export$67d072dabf9c1c63","head1","head2","head3","head4","$aef4c218b61ad8f1$export$b75f8c4f8f3fbd14","groups","RegExp","$aef4c218b61ad8f1$var$charactersToExpression","basic","escapeOnly","pair","character","$d346fdd62afc8c9e$export$ef12b12fd64fa3cc","omit","$c5eff95904ee68ef$export$63ad841d70774900","$7dc645ec5f41ae0f$export$9545335bdecb4b8c","$498931e23a315d0f$export$40952e41c47e8e55","$fc5caea654b3183f$export$39b76096d2f1d598","$10becff34a95ae7a$var$own","$10becff34a95ae7a$var$characters","$10becff34a95ae7a$var$key","$10becff34a95ae7a$export$b1e14dcd42472e57","$351601430b6dedde$export$f53904683bee23d7","named","omitOptionalSemicolons","useNamedReferences","useShortestReferences","decimal","$9b0988cadb1e3292$export$aca9de459d63ca2e","$94f50bff9d61f438$export$fa42eaa97a352e23","TypeError","count","$c60972e083c991fe$export$1a988e7317c65621","unquoted","single","double","$7163d8d46fc7a99f$export$6f093cfa640b7166","entities","$0dfd1c3907d67a95$var$handlers","bogusComments","upperDoctype","tightDoctype","selfClosing","closeEmpty","voids","parts","$0dfd1c3907d67a95$var$serializeAttribute","tight","$0dfd1c3907d67a95$var$serializeAttributes","$0dfd1c3907d67a95$export$84bf76cd7afc7469","opening","tightClose","closing","$0dfd1c3907d67a95$var$own","$0dfd1c3907d67a95$export$80bf7733f1207381","quote","valid","safe","tightLists","collapseEmpty","smart","alternative","$2f130cd68dfb9b9b$export$a10125c086a4df16","allowParseErrors","allowDangerousCharacters","omitOptionalTags","quoteSmart","preferUnquoted","tightAttributes","tightCommaSeparatedLists","tightSelfClosing","collapseEmptyAttributes","closeSelfClosing","closeEmptyElements","$86ff7f9b91ffd07a$var$isMergeableObject","$86ff7f9b91ffd07a$var$isNonNullObject","stringValue","$$typeof","$86ff7f9b91ffd07a$var$REACT_ELEMENT_TYPE","$86ff7f9b91ffd07a$var$isReactElement","$86ff7f9b91ffd07a$var$isSpecial","Symbol","for","$86ff7f9b91ffd07a$var$cloneUnlessOtherwiseSpecified","clone","isMergeableObject","$86ff7f9b91ffd07a$var$deepmerge","val","$86ff7f9b91ffd07a$var$defaultArrayMerge","$86ff7f9b91ffd07a$var$getKeys","getOwnPropertySymbols","symbol","propertyIsEnumerable","$86ff7f9b91ffd07a$var$getEnumerableOwnPropertySymbols","$86ff7f9b91ffd07a$var$propertyIsOnObject","$86ff7f9b91ffd07a$var$mergeObject","destination","forEach","$86ff7f9b91ffd07a$var$propertyIsUnsafe","customMerge","$86ff7f9b91ffd07a$var$getMergeFunction","arrayMerge","cloneUnlessOtherwiseSpecified","sourceIsArray","array","reduce","prev","$e02f66f987c75ba5$var$phrasingHast","$e02f66f987c75ba5$var$getAttrs","nodeAttrs","entries","$e02f66f987c75ba5$var$nodeRenderer","level","layout","onRow","containers","childIndex","j","class","$e02f66f987c75ba5$export$586e46149af8be35","node1","iteratee","preorder","newNode","force","$e02f66f987c75ba5$export$bf38bb5c93e19a5e","$2b6e161c9edcf319$var$editor","getElementById","$2b6e161c9edcf319$var$debug","$2b6e161c9edcf319$var$output","$2b6e161c9edcf319$var$tree","$2b6e161c9edcf319$var$renderHtml","inspect","innerText","innerHTML","err","console","log","addEventListener"],"version":3,"file":"index.6bfc1814.js.map"}