{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-ff749392f6c603a6.js","src/main.js","../glsf/index.js","../glsf/elements.js","../glsf/node_modules/unist-builder/index.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","../glsf/render.js","../glsf/node_modules/mdast-util-from-markdown/index.js","../glsf/node_modules/mdast-util-from-markdown/lib/index.js","../glsf/node_modules/mdast-util-to-string/index.js","../glsf/node_modules/micromark/lib/parse.js","../glsf/node_modules/micromark-util-combine-extensions/index.js","../glsf/node_modules/micromark-util-chunked/index.js","../glsf/node_modules/micromark/lib/initialize/content.js","../glsf/node_modules/micromark-factory-space/index.js","../glsf/node_modules/micromark-util-character/index.js","../glsf/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../glsf/node_modules/micromark/lib/initialize/document.js","../glsf/node_modules/micromark/lib/initialize/flow.js","../glsf/node_modules/micromark-core-commonmark/index.js","../glsf/node_modules/micromark-core-commonmark/lib/attention.js","../glsf/node_modules/micromark-util-classify-character/index.js","../glsf/node_modules/micromark-util-resolve-all/index.js","../glsf/node_modules/micromark-core-commonmark/lib/autolink.js","../glsf/node_modules/micromark-core-commonmark/lib/blank-line.js","../glsf/node_modules/micromark-core-commonmark/lib/block-quote.js","../glsf/node_modules/micromark-core-commonmark/lib/character-escape.js","../glsf/node_modules/micromark-core-commonmark/lib/character-reference.js","../glsf/node_modules/decode-named-character-reference/index.js","../glsf/node_modules/character-entities/index.js","../glsf/node_modules/micromark-core-commonmark/lib/code-fenced.js","../glsf/node_modules/micromark-core-commonmark/lib/code-indented.js","../glsf/node_modules/micromark-core-commonmark/lib/code-text.js","../glsf/node_modules/micromark-core-commonmark/lib/content.js","../glsf/node_modules/micromark-util-subtokenize/index.js","../glsf/node_modules/micromark-core-commonmark/lib/definition.js","../glsf/node_modules/micromark-factory-destination/index.js","../glsf/node_modules/micromark-factory-label/index.js","../glsf/node_modules/micromark-factory-title/index.js","../glsf/node_modules/micromark-factory-whitespace/index.js","../glsf/node_modules/micromark-util-normalize-identifier/index.js","../glsf/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../glsf/node_modules/micromark-core-commonmark/lib/heading-atx.js","../glsf/node_modules/micromark-core-commonmark/lib/html-flow.js","../glsf/node_modules/micromark-util-html-tag-name/index.js","../glsf/node_modules/micromark-core-commonmark/lib/html-text.js","../glsf/node_modules/micromark-core-commonmark/lib/label-end.js","../glsf/node_modules/micromark-core-commonmark/lib/label-start-image.js","../glsf/node_modules/micromark-core-commonmark/lib/label-start-link.js","../glsf/node_modules/micromark-core-commonmark/lib/line-ending.js","../glsf/node_modules/micromark-core-commonmark/lib/list.js","../glsf/node_modules/micromark-core-commonmark/lib/thematic-break.js","../glsf/node_modules/micromark-core-commonmark/lib/setext-underline.js","../glsf/node_modules/micromark/lib/initialize/text.js","../glsf/node_modules/micromark/lib/create-tokenizer.js","../glsf/node_modules/micromark/lib/constructs.js","../glsf/node_modules/micromark/lib/preprocess.js","../glsf/node_modules/micromark/lib/postprocess.js","../glsf/node_modules/micromark-util-decode-numeric-character-reference/index.js","../glsf/node_modules/micromark-util-decode-string/index.js","../glsf/node_modules/unist-util-stringify-position/index.js","../glsf/node_modules/hastscript/index.js","../glsf/node_modules/hastscript/lib/index.js","../glsf/node_modules/hastscript/lib/html.js","../glsf/node_modules/property-information/index.js","../glsf/node_modules/property-information/lib/util/merge.js","../glsf/node_modules/property-information/lib/util/schema.js","../glsf/node_modules/property-information/lib/xlink.js","../glsf/node_modules/property-information/lib/util/create.js","../glsf/node_modules/property-information/lib/normalize.js","../glsf/node_modules/property-information/lib/util/defined-info.js","../glsf/node_modules/property-information/lib/util/info.js","../glsf/node_modules/property-information/lib/util/types.js","../glsf/node_modules/property-information/lib/xml.js","../glsf/node_modules/property-information/lib/xmlns.js","../glsf/node_modules/property-information/lib/util/case-insensitive-transform.js","../glsf/node_modules/property-information/lib/util/case-sensitive-transform.js","../glsf/node_modules/property-information/lib/aria.js","../glsf/node_modules/property-information/lib/html.js","../glsf/node_modules/property-information/lib/svg.js","../glsf/node_modules/property-information/lib/find.js","../glsf/node_modules/hastscript/lib/core.js","../glsf/node_modules/hast-util-parse-selector/index.js","../glsf/node_modules/space-separated-tokens/index.js","../glsf/node_modules/comma-separated-tokens/index.js","../glsf/node_modules/hastscript/lib/svg.js","../glsf/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../glsf/node_modules/unist-util-inspect/index.js","../glsf/node_modules/unist-util-inspect/color-browser.js","../glsf/node_modules/unist-util-map/index.js","../glsf/node_modules/unist-util-remove-position/index.js","../glsf/node_modules/unist-util-visit/index.js","../glsf/node_modules/unist-util-visit-parents/index.js","../glsf/node_modules/unist-util-is/index.js","../glsf/node_modules/unist-util-visit-parents/color.browser.js","../glsf/node_modules/hast-util-sanitize/index.js","../glsf/node_modules/hast-util-sanitize/lib/index.js","../glsf/node_modules/hast-util-sanitize/lib/schema.js","../glsf/node_modules/mdast-util-to-hast/index.js","../glsf/node_modules/mdast-util-to-hast/lib/traverse.js","../glsf/node_modules/mdast-util-to-hast/lib/index.js","../glsf/node_modules/unist-util-position/index.js","../glsf/node_modules/unist-util-generated/index.js","../glsf/node_modules/mdast-util-definitions/index.js","../glsf/node_modules/mdast-util-to-hast/lib/footer.js","../glsf/node_modules/micromark-util-sanitize-uri/index.js","../glsf/node_modules/micromark-util-encode/index.js","../glsf/node_modules/mdast-util-to-hast/lib/wrap.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/index.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/break.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/code.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/html.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../glsf/node_modules/mdurl/encode.js","../glsf/node_modules/mdast-util-to-hast/lib/revert.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/image.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/link.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/list.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/root.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/table.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/text.js","../glsf/node_modules/trim-lines/index.js","../glsf/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../glsf/node_modules/hast-util-to-html/index.js","../glsf/node_modules/hast-util-to-html/lib/index.js","../glsf/node_modules/html-void-elements/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/opening.js","../glsf/node_modules/hast-util-is-element/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/util/comment.js","../glsf/node_modules/hast-util-to-html/lib/omission/util/siblings.js","../glsf/node_modules/hast-util-whitespace/index.js","../glsf/node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js","../glsf/node_modules/hast-util-to-html/lib/omission/closing.js","../glsf/node_modules/hast-util-to-html/lib/omission/omission.js","../glsf/node_modules/hast-util-to-html/lib/tree.js","../glsf/node_modules/stringify-entities/index.js","../glsf/node_modules/stringify-entities/lib/index.js","../glsf/node_modules/stringify-entities/lib/core.js","../glsf/node_modules/stringify-entities/lib/util/format-smart.js","../glsf/node_modules/stringify-entities/lib/util/to-hexadecimal.js","../glsf/node_modules/stringify-entities/lib/util/to-decimal.js","../glsf/node_modules/stringify-entities/lib/util/to-named.js","../glsf/node_modules/character-entities-legacy/index.js","../glsf/node_modules/character-entities-html4/index.js","../glsf/node_modules/stringify-entities/lib/constant/dangerous.js","../glsf/node_modules/stringify-entities/lib/util/format-basic.js","../glsf/node_modules/ccount/index.js","../glsf/node_modules/hast-util-to-html/lib/constants.js","../glsf/node_modules/hast-util-to-html/lib/comment.js","../glsf/node_modules/hast-util-to-html/lib/doctype.js","../glsf/node_modules/hast-util-to-html/lib/raw.js","../glsf/node_modules/hast-util-to-html/lib/text.js","../glsf/node_modules/deepmerge/dist/cjs.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"bed887d14d6bcbeb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import {\n  doc, heading, image, mediaContainer, paragraph, inspectHast, glsfToHtml, column, columnContainer,\n} from 'glsf';\n\nconst editor = document.getElementById('tree');\nconst debug = document.getElementById('debug');\nconst output = document.getElementById('output');\n\nconst tree = doc([\n  heading('Title', { level: 1 }),\n  heading('Subtitle', { level: 2 }),\n  paragraph('We*lcom*e'),\n  heading('Here are [columns](http://example.com)', { level: 2 }),\n  columnContainer([\n    column([\n      mediaContainer([\n        image('https://api.lorem.space/image/drink?w=600&h=300'),\n        image('https://api.lorem.space/image/drink?w=600&h=600'),\n        image('https://api.lorem.space/image/drink?w=600&h=600'),\n        image('https://api.lorem.space/image/drink?w=600&h=600'),\n      ], { layout: '1-3' }),\n    ]),\n    column([\n      paragraph('*Lorem **ipsum*** dolor sit amet, consectetur adipiscing elit.'),\n      paragraph('Quisque vulputate</p> dui eget lacus luctus, et vehicula dui sollicitudin.'),\n      heading('Subtitle', { level: 2 }),\n      paragraph('Duis et ultricies felis.'),\n    ]),\n  ]),\n  heading('Example 1-2 <script>alert(\"lol\")</script>', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=300'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '1-2' }),\n  heading('Example 1-3', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=300'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '1-3' }),\n  heading('Example 2x2', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '2x2' }),\n  heading('Example 3x3', { level: 2 }),\n  mediaContainer([\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n    image('https://api.lorem.space/image/drink?w=600&h=600'),\n  ], { layout: '3x3' }),\n]);\n\nfunction renderHtml() {\n  try {\n    const inspect = inspectHast(JSON.parse(editor.value));\n    debug.innerText = inspect;\n    const html = glsfToHtml(JSON.parse(editor.value));\n    output.innerHTML = html;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\neditor.innerHTML = JSON.stringify(tree, null, 2);\nrenderHtml();\n\neditor.addEventListener('input', renderHtml);\n","export * from './elements.js';\nexport * from './render.js';\n","import { u } from 'unist-builder';\n\nexport const doc = (content, attrs) => u('root', attrs, content);\nexport const paragraph = (text) => u('paragraph', [u('text', text)]);\nexport const heading = (text, attrs) => u('heading', attrs, [u('text', text)]);\nexport const mediaContainer = (content, attrs) => u('media-container', attrs, content);\nexport const token = (tezosStoragePointer) => u('token', tezosStoragePointer);\nexport const image = (url, attrs) => u('image', { ...attrs, url });\nexport const column = (content, attrs) => u('column', attrs, content);\nexport const columnContainer = (content, attrs) => u('column-container', attrs, content);\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { fromMarkdown } from 'mdast-util-from-markdown';\nimport { h } from 'hastscript';\nimport { inspectNoColor } from 'unist-util-inspect';\nimport { map } from 'unist-util-map';\nimport { removePosition } from 'unist-util-remove-position';\nimport { sanitize, defaultSchema } from 'hast-util-sanitize';\nimport { toHast } from 'mdast-util-to-hast';\nimport { toHtml } from 'hast-util-to-html';\nimport deepmerge from 'deepmerge';\n\nconst phrasingHast = deepmerge(defaultSchema, {\n  tagNames: [\n    'em',\n    'strong',\n    'a',\n    'strike',\n  ],\n});\n\nconst getAttrs = (node) => {\n  const nodeAttrs = new Set(['type', 'children', 'value']);\n  Object.entries(node).reduce((attrs, [key, value]) => {\n    if (nodeAttrs.has(key)) return attrs;\n    attrs[key] = value;\n    return value;\n  }, {});\n};\n\n// Very basic, we match each node type and transform it to a HAST node, the result HAST tree\n// can then be stringified, producing HTML\nconst nodeRenderer = {\n  root: (node) => h('div', getAttrs(node), node.children),\n\n  paragraph: (node) => h('p', getAttrs(node), node.children),\n\n  heading: (node) => h(`h${node.level}`, getAttrs(node), node.children),\n\n  'media-container': (node) => {\n    const layout = node.layout || '1x1';\n\n    let rows;\n    let onRow;\n    if (layout.includes('x')) {\n      [onRow, rows] = layout.split('x').map((x) => parseInt(x, 10));\n      onRow = new Array(rows).fill(onRow);\n    } else if (layout.includes('-')) {\n      onRow = layout.split('-').map((x) => parseInt(x, 10));\n      rows = 2;\n    } else {\n      throw new Error(`Invalid layout ${layout}`);\n    }\n\n    const containers = [];\n    let childIndex = 0;\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < onRow[i]; j++) {\n        row.push(h('div', { class: `item-${childIndex + 1}` }, [node.children[childIndex]]));\n        childIndex++;\n      }\n      containers.push(h('div', { class: `row row-${i + 1}` }, row));\n    }\n\n    Object.assign(node, { children: containers });\n\n    return h(\n      'div',\n      { ...getAttrs(node), class: `media-container layout-${layout}` },\n      node.children,\n    );\n  },\n\n  column: (node) => h('div', { ...getAttrs(node), class: 'column' }, node.children),\n\n  'column-container': (node) => h('div', { ...getAttrs(node), class: 'column-container' }, node.children),\n\n  image: (node) => {\n    const attrs = { src: node.url };\n\n    if (node['aspect-ratio']) {\n      attrs.style = `aspect-ratio: ${node['aspect-ratio']}`;\n    }\n\n    return h('img', attrs);\n  },\n\n  text: (node) => {\n    const mdast = fromMarkdown(node.value);\n    const hast = toHast(mdast);\n    // get the only child of \"root\", a \"p\"\n    const content = hast.children[0];\n    // make it a \"span\" instead\n    return sanitize(h('span', content.children), phrasingHast);\n  },\n};\n\nexport const glsfToHast = (tree) => removePosition(map(tree, (node) => {\n  if (!nodeRenderer[node.type]) {\n    return node;\n  }\n  return nodeRenderer[node.type](node);\n}));\n\nexport const glsfToHtml = (tree) => {\n  const hast = glsfToHast(tree);\n  const html = toHtml(hast);\n  return html;\n};\n\nexport const inspectHast = (tree) => inspectNoColor(glsfToHast(tree));\n","/**\n * @typedef {import('./lib/index.js').Value} Value\n * @typedef {import('./lib/index.js').Encoding} Encoding\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Extension} Extension\n * @typedef {import('./lib/index.js').Handle} Handle\n * @typedef {import('./lib/index.js').Transform} Transform\n * @typedef {import('./lib/index.js').Token} Token\n * @typedef {import('./lib/index.js').CompileContext} CompileContext\n * @typedef {import('./lib/index.js').OnEnterError} OnEnterError\n * @typedef {import('./lib/index.js').OnExitError} OnExitError\n *\n * @typedef {import('./lib/index.js').OnEnterError} OnError\n *   To do: deprecate next major.\n */\nexport {fromMarkdown} from './lib/index.js'\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","export {attention} from './lib/attention.js'\nexport {autolink} from './lib/autolink.js'\nexport {blankLine} from './lib/blank-line.js'\nexport {blockQuote} from './lib/block-quote.js'\nexport {characterEscape} from './lib/character-escape.js'\nexport {characterReference} from './lib/character-reference.js'\nexport {codeFenced} from './lib/code-fenced.js'\nexport {codeIndented} from './lib/code-indented.js'\nexport {codeText} from './lib/code-text.js'\nexport {content} from './lib/content.js'\nexport {definition} from './lib/definition.js'\nexport {hardBreakEscape} from './lib/hard-break-escape.js'\nexport {headingAtx} from './lib/heading-atx.js'\nexport {htmlFlow} from './lib/html-flow.js'\nexport {htmlText} from './lib/html-text.js'\nexport {labelEnd} from './lib/label-end.js'\nexport {labelStartImage} from './lib/label-start-image.js'\nexport {labelStartLink} from './lib/label-start-link.js'\nexport {lineEnding} from './lib/line-ending.js'\nexport {list} from './lib/list.js'\nexport {setextUnderline} from './lib/setext-underline.js'\nexport {thematicBreak} from './lib/thematic-break.js'\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('./lib/index.js').Child} Child Acceptable child value\n * @typedef {import('./lib/index.js').Properties} Properties Acceptable properties value.\n */\n\nexport {h, s} from './lib/index.js'\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n */\n\nexport {h} from './html.js'\nexport {s} from './svg.js'\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Object.<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array.<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array.<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: HChild[]): Root\n     *   (selector: string, properties?: HProperties, ...children: HChild[]): Element\n     *   (selector: string, ...children: HChild[]): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {HChild[]} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array.<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array.<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array.<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array.<string>} values\n * @returns {Object.<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} s.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","import {color} from './color.js'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Object} InspectOptions\n * @property {boolean} [showPositions=true]\n */\n\n/* c8 ignore next */\nexport var inspect = color ? inspectColor : inspectNoColor\n\nvar own = {}.hasOwnProperty\n\nvar bold = ansiColor(1, 22)\nvar dim = ansiColor(2, 22)\nvar yellow = ansiColor(33, 39)\nvar green = ansiColor(32, 39)\n\n// ANSI color regex.\n/* eslint-disable-next-line no-control-regex */\nvar colorExpression = /(?:(?:\\u001B\\[)|\\u009B)(?:\\d{1,3})?(?:(?:;\\d{0,3})*)?[A-M|f-m]|\\u001B[A-M]/g\n\n/**\n * Inspects a node, without using color.\n *\n * @param {unknown} node\n * @param {InspectOptions} [options]\n * @returns {string}\n */\nexport function inspectNoColor(node, options) {\n  return inspectColor(node, options).replace(colorExpression, '')\n}\n\n/**\n * Inspects a node, using color.\n *\n * @param {unknown} tree\n * @param {InspectOptions} [options]\n * @returns {string}\n */\nexport function inspectColor(tree, options) {\n  var positions =\n    !options ||\n    options.showPositions === null ||\n    options.showPositions === undefined\n      ? true\n      : options.showPositions\n\n  return inspectValue(tree)\n\n  /**\n   * @param {unknown} node\n   * @returns {string}\n   */\n  function inspectValue(node) {\n    if (node && typeof node === 'object' && 'length' in node) {\n      // @ts-ignore looks like a list of nodes.\n      return inspectNodes(node)\n    }\n\n    // @ts-ignore looks like a single node.\n    if (node && node.type) {\n      // @ts-ignore looks like a single node.\n      return inspectTree(node)\n    }\n\n    return inspectNonTree(node)\n  }\n\n  /**\n   * @param {unknown} value\n   * @returns {string}\n   */\n  function inspectNonTree(value) {\n    return JSON.stringify(value)\n  }\n\n  /**\n   * @param {Node[]} nodes\n   * @returns {string}\n   */\n  function inspectNodes(nodes) {\n    /** @type {Array.<string>} */\n    var result = []\n    var index = -1\n\n    while (++index < nodes.length) {\n      result.push(\n        dim((index < nodes.length - 1 ? '├' : '└') + '─' + index) +\n          ' ' +\n          indent(\n            inspectValue(nodes[index]),\n            (index < nodes.length - 1 ? dim('│') : ' ') + '   ',\n            true\n          )\n      )\n    }\n\n    return result.join('\\n')\n  }\n\n  /**\n   * @param {Object.<string, unknown>} object\n   * @returns {string}\n   */\n  function inspectFields(object) {\n    /** @type {Array.<string>} */\n    var result = []\n    /** @type {string} */\n    var key\n    /** @type {unknown} */\n    var value\n    /** @type {string} */\n    var formatted\n\n    for (key in object) {\n      /* c8 ignore next 1 */\n      if (!own.call(object, key)) continue\n\n      value = object[key]\n\n      if (\n        value === undefined ||\n        // Standard keys defined by unist that we format differently.\n        // <https://github.com/syntax-tree/unist>\n        key === 'type' ||\n        key === 'value' ||\n        key === 'children' ||\n        key === 'position' ||\n        // Ignore `name` (from xast) and `tagName` (from `hast`) when string.\n        (typeof value === 'string' && (key === 'name' || key === 'tagName'))\n      ) {\n        continue\n      }\n\n      // A single node.\n      if (\n        value &&\n        typeof value === 'object' &&\n        // @ts-ignore looks like a node.\n        value.type &&\n        key !== 'data' &&\n        key !== 'attributes' &&\n        key !== 'properties'\n      ) {\n        // @ts-ignore looks like a node.\n        formatted = inspectTree(value)\n      }\n      // A list of nodes.\n      else if (\n        value &&\n        typeof value === 'object' &&\n        'length' in value &&\n        value[0] &&\n        value[0].type\n      ) {\n        // @ts-ignore looks like a list of nodes.\n        formatted = '\\n' + inspectNodes(value)\n      } else {\n        formatted = inspectNonTree(value)\n      }\n\n      result.push(\n        key + dim(':') + (/\\s/.test(formatted.charAt(0)) ? '' : ' ') + formatted\n      )\n    }\n\n    return indent(\n      result.join('\\n'),\n      // @ts-ignore looks like a parent node.\n      (object.children && object.children.length > 0 ? dim('│') : ' ') + ' '\n    )\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {string}\n   */\n  function inspectTree(node) {\n    var result = [formatNode(node)]\n    var fields = inspectFields(node)\n    // @ts-ignore looks like a parent.\n    var content = inspectNodes(node.children || [])\n    if (fields) result.push(fields)\n    if (content) result.push(content)\n    return result.join('\\n')\n  }\n\n  /**\n   * Colored node formatter.\n   *\n   * @param {Node} node\n   * @returns {string}\n   */\n  function formatNode(node) {\n    var result = [bold(node.type)]\n    var kind = node.tagName || node.name\n    var position = positions ? stringifyPosition(node.position) : ''\n\n    if (typeof kind === 'string') {\n      result.push('<', kind, '>')\n    }\n\n    if (node.children) {\n      // @ts-ignore looks like a parent.\n      result.push(dim('['), yellow(node.children.length), dim(']'))\n    } else if (typeof node.value === 'string') {\n      result.push(' ', green(inspectNonTree(node.value)))\n    }\n\n    if (position) {\n      result.push(' ', dim('('), position, dim(')'))\n    }\n\n    return result.join('')\n  }\n}\n\n/**\n * @param {string} value\n * @param {string} indentation\n * @param {boolean} [ignoreFirst=false]\n * @returns {string}\n */\nfunction indent(value, indentation, ignoreFirst) {\n  var lines = value.split('\\n')\n  var index = ignoreFirst ? 0 : -1\n\n  if (!value) return value\n\n  while (++index < lines.length) {\n    lines[index] = indentation + lines[index]\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {Position} value\n * @returns {string}\n */\nfunction stringifyPosition(value) {\n  /** @type {Position} */\n  // @ts-ignore\n  var position = value || {}\n  /** @type {Array.<string>} */\n  var result = []\n  /** @type {Array.<string>} */\n  var positions = []\n  /** @type {Array.<string>} */\n  var offsets = []\n\n  point(position.start)\n  point(position.end)\n\n  if (positions.length > 0) result.push(positions.join('-'))\n  if (offsets.length > 0) result.push(offsets.join('-'))\n\n  return result.join(', ')\n\n  /**\n   * @param {Point} value\n   */\n  function point(value) {\n    if (value) {\n      positions.push((value.line || 1) + ':' + (value.column || 1))\n\n      if ('offset' in value) {\n        offsets.push(String(value.offset || 0))\n      }\n    }\n  }\n}\n\n/**\n * Factory to wrap values in ANSI colours.\n *\n * @param {number} open\n * @param {number} close\n * @returns {function(string): string}\n */\nfunction ansiColor(open, close) {\n  return color\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function color(value) {\n    return '\\u001B[' + open + 'm' + value + '\\u001B[' + close + 'm'\n  }\n}\n","export var color = false\n","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * Unist utility to create a new tree by mapping all nodes with the given function.\n *\n * @template {Node} Tree\n * @param {Tree} tree Tree to map\n * @param {import('./complex-types').MapFunction<Tree>} iteratee Function that returns a new node\n * @returns {Tree} New mapped tree.\n */\nexport function map(tree, iteratee) {\n  // @ts-expect-error Looks like a children.\n  return preorder(tree, null, null)\n\n  /** @type {import('./complex-types').MapFunction<Tree>} */\n  function preorder(node, index, parent) {\n    var newNode = Object.assign({}, iteratee(node, index, parent))\n\n    if ('children' in node) {\n      // @ts-expect-error Looks like a parent.\n      newNode.children = node.children.map(function (\n        /** @type {import('./complex-types').InclusiveDescendant<Tree>} */ child,\n        /** @type {number} */ index\n      ) {\n        return preorder(child, index, node)\n      })\n    }\n\n    return newNode\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * Utility to remove positions from a tree\n *\n * @param node The unist tree\n * @param force if `force` is given, uses `delete`, otherwise, sets positions to `undefined`.\n * @returns The same node, but either with `position: undefined` or w/o `position` fields\n */\nexport const removePosition =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, force?: false) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, force: true) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} node\n     * @param {boolean} [force=false]\n     * @returns {Tree}\n     */\n    function (node, force) {\n      visit(node, remove)\n\n      // @ts-ignore hush TS, we know what we’re doing.\n      return node\n\n      /**\n       * @param {Node} node the unist tree\n       */\n      function remove(node) {\n        if (force) {\n          delete node.position\n        } else {\n          node.position = undefined\n        }\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('./lib/index.js').Schema} Schema\n */\n\nexport {sanitize} from './lib/index.js'\nexport {defaultSchema} from './lib/schema.js'\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Properties} Properties\n * @typedef {Parent['children'][number]|Root} Node\n *\n * @typedef {Properties[string]} PropertyValue Possible property values\n * @typedef {string|number|boolean} PrimitivePropertyValue Possible primitive HTML attribute values\n * @typedef {string|[string, ...PrimitivePropertyValue[]]} AttributeValue\n * @typedef {Object.<string, Array.<PrimitivePropertyValue>>} AttributeMap\n *\n * @typedef Schema Sanitization configuration\n * @property {Object<string, Array<AttributeValue>>} [attributes] Map of tag names to allowed property names. The special '*' key defines property names allowed on all elements\n * @property {Object<string, Object<string, PropertyValue>>} [required] Map of tag names to required property names and their default property value\n * @property {Array.<string>} [tagNames] List of allowed tag names\n * @property {Object<string, Array.<string>>} [protocols] Map of protocols to allow in property values\n * @property {Object<string, Array.<string>>} [ancestors] Map of tag names to their required ancestor elements\n * @property {Array.<string>} [clobber] List of allowed property names which can clobber\n * @property {string} [clobberPrefix] Prefix to use before potentially clobbering property names\n * @property {Array.<string>} [strip] Names of elements to strip from the tree\n * @property {boolean} [allowComments] Whether to allow comments\n * @property {boolean} [allowDoctypes] Whether to allow doctypes\n *\n * @typedef {(schema: Schema, value: unknown, node: Node, stack: Array.<string>) => unknown} Handler\n * @typedef {Object.<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition)} NodeDefinitionGetter\n * @typedef {Object.<string, NodeDefinition|NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nvar own = {}.hasOwnProperty\nvar push = [].push\n\n/** @type {NodeSchema} */\nvar nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node Hast tree to sanitize\n * @param {Schema} [schema] Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  var ctx = {type: 'root', children: []}\n  /** @type {Node|Array.<Node>} */\n  var replace\n\n  if (node && typeof node === 'object' && node.type) {\n    replace = one(Object.assign({}, defaultSchema, schema || {}), node, [])\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-ignore Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array.<string>} stack\n * @returns {Node|Array.<Node>|null}\n */\nfunction one(schema, node, stack) {\n  var type = node && node.type\n  /** @type {Node} */\n  // @ts-ignore rest of props added later.\n  var replacement = {type: node.type}\n  /** @type {boolean} */\n  var replace\n  /** @type {NodeDefinition|NodeDefinitionGetter} */\n  var definition\n  /** @type {NodeDefinition} */\n  var allowed\n  /** @type {unknown} */\n  var result\n  /** @type {string} */\n  var key\n\n  if (own.call(nodeSchema, type)) {\n    definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      replace = true\n      allowed = Object.assign({}, definition, nodeSchema['*'])\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = null\n            // Set the non-safe value.\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : null\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array.<Node>} children\n * @returns {Array.<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array.<Node>} */\n  var results = []\n  var index = -1\n  /** @type {Node|Array.<Node>} */\n  var value\n\n  if (Array.isArray(children)) {\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      value = one(schema, children[index], stack)\n\n      if (value) {\n        if ('length' in value) {\n          push.apply(results, value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : null\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : null\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  var name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  var reqs = schema.required || {}\n  var props = properties || {}\n  var allowed = Object.assign(\n    {},\n    toPropertyValueMap(schema.attributes['*']),\n    toPropertyValueMap(\n      name && own.call(schema.attributes, name) ? schema.attributes[name] : []\n    )\n  )\n  /** @type {Properties} */\n  var result = {}\n  /** @type {Array.<PrimitivePropertyValue>} */\n  var definition\n  /** @type {PropertyValue} */\n  var value\n  /** @type {string} */\n  var key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = props[key]\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @type {Handler}\n * @returns {string|false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  var name = typeof tagName === 'string' ? tagName : ''\n  var index = -1\n\n  if (!name || name === '*' || !schema.tagNames.includes(name)) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  var result = typeof value === 'string' ? value : ''\n  var index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array.<unknown>} values\n * @param {string} prop\n * @param {Array.<PrimitivePropertyValue>} definition\n * @returns {Array.<string|number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  var index = -1\n  /** @type {Array.<string|number>} */\n  var result = []\n  /** @type {PropertyValue} */\n  var value\n\n  while (++index < values.length) {\n    value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-ignore Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {Array.<PropertyValue>} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 || definition.includes(value))\n  ) {\n    return schema.clobber.includes(prop) ? schema.clobberPrefix + value : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  var url = String(value)\n  var colon = url.indexOf(':')\n  var questionMark = url.indexOf('?')\n  var numberSign = url.indexOf('#')\n  var slash = url.indexOf('/')\n  var protocols = own.call(schema.protocols, prop)\n    ? schema.protocols[prop].concat()\n    : []\n  var index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Array.<AttributeValue>} values\n * @returns {AttributeMap}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeMap} */\n  var result = {}\n  var index = -1\n  /** @type {AttributeValue} */\n  var value\n\n  while (++index < values.length) {\n    value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Handler} Handler\n * @typedef {import('./lib/index.js').Handlers} Handlers\n * @typedef {import('./lib/index.js').H} H\n * @typedef {import('./complex-types').Raw} Raw\n */\n\nexport {one, all} from './lib/traverse.js'\nexport {defaultHandlers, toHast} from './lib/index.js'\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteLabelTagName HTML used for the footnote label\n * @property {Properties} footnoteLabelProperties properties on the HTML tag used for the footnote label\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={id: 'footnote-label', className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    id: 'footnote-label',\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./lib/types.js').Options} Options\n */\n\nexport {toHtml} from './lib/index.js'\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Quote} Quote\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {omission} from './omission/index.js'\nimport {one} from './tree.js'\n\n/**\n * @param {Node|Array.<Node>} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toHtml(node, options = {}) {\n  const quote = options.quote || '\"'\n  /** @type {Quote} */\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {Context} */\n  const context = {\n    valid: options.allowParseErrors ? 0 : 1,\n    safe: options.allowDangerousCharacters ? 0 : 1,\n    schema: options.space === 'svg' ? svg : html,\n    omit: options.omitOptionalTags ? omission : undefined,\n    quote,\n    alternative,\n    smart: options.quoteSmart,\n    unquoted: options.preferUnquoted,\n    tight: options.tightAttributes,\n    upperDoctype: options.upperDoctype,\n    tightDoctype: options.tightDoctype,\n    bogusComments: options.bogusComments,\n    tightLists: options.tightCommaSeparatedLists,\n    tightClose: options.tightSelfClosing,\n    collapseEmpty: options.collapseEmptyAttributes,\n    dangerous: options.allowDangerousHtml,\n    voids: options.voids || htmlVoidElements.concat(),\n    entities: options.entities || {},\n    close: options.closeSelfClosing,\n    closeEmpty: options.closeEmptyElements\n  }\n\n  return one(\n    context,\n    // @ts-ignore Assume `node` does not contain a root.\n    Array.isArray(node) ? {type: 'root', children: node} : node,\n    null,\n    null\n  )\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('../types.js').Omission} Omission\n */\n\nimport {opening} from './opening.js'\nimport {closing} from './closing.js'\n\n/** @type {Omission} */\nexport const omission = {opening, closing}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n * @typedef {import('../types.js').Child} Child\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || !comment(head)\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @type {OmitHandle}\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array.<string>} */\n  const seen = []\n  let index = -1\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n    if (isElement(child, ['title', 'base'])) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (!comment(head) &&\n      !whitespaceStart(head) &&\n      !isElement(head, ['meta', 'link', 'script', 'style', 'template']))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @type {OmitHandle}\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    isElement(previous, 'colgroup') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    isElement(previous, ['thead', 'tbody']) &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'tr')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('../../types.js').Comment} Comment\n */\n\nimport {convert} from 'unist-util-is'\n\n/** @type {import('unist-util-is').AssertPredicate<Comment>} */\n// @ts-ignore\nexport const comment = convert('comment')\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children\n    let offset = index + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Node} Node\n * @typedef {import('../../types.js').Text} Text\n */\n\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\n\n/** @type {import('unist-util-is').AssertPredicate<Text>} */\n// @ts-ignore\nconst isText = convert('text')\n\n/**\n * Check if `node` starts with whitespace.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function whitespaceStart(node) {\n  return isText(node) && whitespace(node.value.charAt(0))\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @type {OmitHandle}\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return !next || (!comment(next) && !whitespaceStart(next))\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @type {OmitHandle}\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? isElement(next, [\n        'address',\n        'article',\n        'aside',\n        'blockquote',\n        'details',\n        'div',\n        'dl',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'footer',\n        'form',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'header',\n        'hgroup',\n        'hr',\n        'main',\n        'menu',\n        'nav',\n        'ol',\n        'p',\n        'pre',\n        'section',\n        'table',\n        'ul'\n      ])\n    : !parent ||\n        // Confusing parent.\n        !isElement(parent, [\n          'a',\n          'audio',\n          'del',\n          'ins',\n          'map',\n          'noscript',\n          'video'\n        ])\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @type {OmitHandle}\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @type {OmitHandle}\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @type {OmitHandle}\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @type {OmitHandle}\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['rp', 'rt'])\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @type {OmitHandle}\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @type {OmitHandle}\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['option', 'optgroup'])\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @type {OmitHandle}\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['menuitem', 'hr', 'menu'])\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @type {OmitHandle}\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @type {OmitHandle}\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @type {OmitHandle}\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @type {OmitHandle}\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['td', 'th'])\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Object.<string, OmitHandle>} handlers\n * @returns {OmitHandle}\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n * @typedef {import('./types.js').Parent} Parent\n */\n\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {ccount} from 'ccount'\nimport {constants} from './constants.js'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {raw} from './raw.js'\nimport {text} from './text.js'\n\n/**\n * @type {Object.<string, Handle>}\n */\nconst handlers = {\n  comment,\n  doctype,\n  element,\n  // @ts-ignore `raw` is nonstandard\n  raw,\n  // @ts-ignore `root` is a parent.\n  root: all,\n  text\n}\n\nconst own = {}.hasOwnProperty\n\n/**\n * @type {Handle}\n */\nexport function one(ctx, node, index, parent) {\n  if (!node || !node.type) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (!own.call(handlers, node.type)) {\n    throw new Error('Cannot compile unknown node `' + node.type + '`')\n  }\n\n  return handlers[node.type](ctx, node, index, parent)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @type {Handle}\n * @param {Parent} parent\n */\nexport function all(ctx, parent) {\n  /** @type {Array.<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = one(ctx, children[index], index, parent)\n  }\n\n  return results.join('')\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function element(ctx, node, index, parent) {\n  const schema = ctx.schema\n  const omit = schema.space === 'svg' ? undefined : ctx.omit\n  let selfClosing =\n    schema.space === 'svg'\n      ? ctx.closeEmpty\n      : ctx.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array.<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    ctx.schema = svg\n  }\n\n  const attrs = serializeAttributes(ctx, node.properties)\n\n  const content = all(\n    ctx,\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  ctx.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !omit.opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (selfClosing && (schema.space === 'svg' || ctx.close)) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !ctx.tightClose ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {Properties} props\n * @returns {string}\n */\nfunction serializeAttributes(ctx, props) {\n  /** @type {Array.<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n  /** @type {string} */\n  let value\n  /** @type {string} */\n  let last\n\n  for (key in props) {\n    if (props[key] !== undefined && props[key] !== null) {\n      value = serializeAttribute(ctx, key, props[key])\n      if (value) values.push(value)\n    }\n  }\n\n  while (++index < values.length) {\n    last = ctx.tight ? values[index].charAt(values[index].length - 1) : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(ctx, key, value) {\n  const info = find(ctx.schema, key)\n  let quote = ctx.quote\n  /** @type {string} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, ctx.entities, {\n      // Always encode without parse errors in non-HTML.\n      subset:\n        constants.name[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t\n  // test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  value =\n    typeof value === 'object' && 'length' in value\n      ? // `spaces` doesn’t accept a second argument, but it’s given here just to\n        // keep the code cleaner.\n        (info.commaSeparated ? commas : spaces)(value, {\n          padLeft: !ctx.tightLists\n        })\n      : String(value)\n\n  if (ctx.collapseEmpty && !value) return name\n\n  // Check unquoted value.\n  if (ctx.unquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, ctx.entities, {\n        subset: constants.unquoted[ctx.valid][ctx.safe],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {\n      quote = ctx.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, ctx.entities, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[\n            ctx.schema.space === 'html' ? ctx.valid : 1\n          ][ctx.safe],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('./lib/index.js').LightOptions} LightOptions\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport * from './lib/index.js'\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nexport function formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","// Maps of subsets.\n// Each value is a matrix of tuples.\n// The first value causes parse errors, the second is valid.\n// Of both values, the first value is unsafe, and the second is safe.\nexport const constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Comment} Comment\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(ctx, node) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return ctx.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, ctx.entities, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, ctx.entities, {subset: ['<', '>']})\n    )\n  }\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n */\n\n/**\n * @type {Handle}\n */\nexport function doctype(ctx) {\n  return (\n    '<!' +\n    (ctx.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (ctx.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * @type {Handle}\n * @param {Raw} node\n */\nexport function raw(ctx, node, index, parent) {\n  // @ts-ignore Hush.\n  return ctx.dangerous ? node.value : text(ctx, node, index, parent)\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(ctx, node, _, parent) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    // @ts-expect-error: hush.\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, ctx.entities, {subset: ['<', '&']})\n      )\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"names":[],"version":3,"file":"index.4d6bcbeb.js.map","sourceRoot":"/__parcel_source_root/"}